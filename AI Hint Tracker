    while incorrect_guesses < max_incorrect_guesses:
        print(display_hangman(incorrect_guesses))
        print(f"Score: {score}")
        print(f"Word: {' '.join(word_completion)}")
        print(f"Hints Available: {hints}")
        guess_letter = input("Enter your guess (or type 'hint' to use a hint): ").lower()

        if guess_letter == 'hint':
            if hints > 0:
                hints -= 1
                available_letters = [letter for letter in word_lower if letter not in guessed_letters]
                if available_letters:
                    hint_letter = random.choice(available_letters)
                    for i, letter in enumerate(word_lower):
                        if letter == hint_letter:
                            word_completion[i] = word[i]  # Use the original case of the letter in the word
                    guessed_letters.add(hint_letter)
                    print(f"Hint used! The letter '{hint_letter}' is in the word.")
                    if '_' not in word_completion:
                        print(f"Congratulations! You guessed the word: {''.join(word_completion)}")
                        score += 1
                        incorrect_guesses = max(0, incorrect_guesses - 3)  # Decrease incorrect guesses by 3 or set to 0
                        break
                else:
                    print("No available letters for hint.")
            else:
                print("No hints available.")
            continue
#Explanation:
#Hints System:

#The user starts with 3 hints.
#The user can type 'hint' to use a hint, which reveals a random letter in the word that hasn't been guessed yet.
#The number of hints is decreased by 1 each time a hint is used.
#If the user has no hints left, they are informed and cannot use a hint.
#One hint regenerates every 3 words guessed if no hint was used.
#Tracking Hints:

#The number of hints is stored in the user data.
#The update_statistics function regenerates one hint every 3 words guessed if no hint was used.
#Game Logic:

#The guess_letters function handles the main game logic, including guessing letters, using hints, and updating the display.
#The main function handles the overall game flow, including loading user data, starting new games, updating statistics, and saving user data.
