import random

# Define themes and their corresponding word lists
themes = {
    'fruits': {
        3: ['fig', 'pea', 'nut'],
        4: ['kiwi', 'plum', 'pear'],
        5: ['apple', 'grape', 'mango'],
        6: ['banana', 'orange', 'tomato']
    },
    'animals': {
        3: ['cat', 'dog', 'bat'],
        4: ['lion', 'wolf', 'bear'],
        5: ['zebra', 'tiger', 'horse'],
        6: ['monkey', 'giraffe', 'rabbit']
    },
    'colors': {
        3: ['red', 'tan', 'sky'],
        4: ['blue', 'pink', 'gold'],
        5: ['green', 'white', 'black'],
        6: ['yellow', 'orange', 'purple']
    }
}

def word_picker(words):
    # Words will be a list of lists
    all_words = [word for sublist in words for word in sublist]
    random_word = random.choice(all_words)
    return random_word

def select_theme():
    print("Select a theme (or press Enter to choose from all themes):")
    for i, theme in enumerate(themes.keys(), 1):
        print(f"{i}. {theme}")
    theme_choice = input("Enter the number of your choice: ")
    if theme_choice == "":
        return None
    try:
        theme_choice = int(theme_choice)
        if 1 <= theme_choice <= len(themes):
            selected_theme = list(themes.keys())[theme_choice - 1]
            return selected_theme
        else:
            print("Please enter a valid number.")
            return select_theme()
    except ValueError:
        print("Please enter a valid number.")
        return select_theme()

def select_word_length(theme):
    print("Select the length of the word you want to guess:")
    available_lengths = list(themes[theme].keys()) if theme else [3, 4, 5, 6]
    for length in available_lengths:
        print(f"{length} letters")
    while True:
        try:
            length_choice = int(input("Enter the length of the word: "))
            if length_choice in available_lengths:
                return length_choice
            else:
                print("Please enter a valid length.")
        except ValueError:
            print("Please enter a valid number.")

def main():
    selected_theme = select_theme()
    if selected_theme:
        print(f"You selected the theme: {selected_theme}")
    
    while True:
        word_length = select_word_length(selected_theme)
        if selected_theme:
            word_list = themes[selected_theme][word_length]
        else:
            word_list = [word for theme in themes.values() for word in theme[word_length]]
        word_to_guess = word_picker([word_list])
        print(f"Guess the word: {'_' * word_length}")
        
        # Here you can call your guess_letters function or any other game logic
        # For demonstration, we'll just print the word to guess
        print(f"The word to guess is: {word_to_guess}")
        
        play_again = input("Do you want to play another round? (yes/no): ").lower()
        if play_again != 'yes':
            break

if __name__ == "__main__":
    main()

word_picker Function:

This function takes a list of lists and flattens it into a single list of words.
It then picks a random word from the flattened list using random.choice.
select_theme Function:

This function prompts the user to select a theme from the available themes.
If the user presses Enter without choosing a theme, it returns None, indicating that words should be chosen from all themes combined.
It validates the user's input and returns the selected theme or None.
select_word_length Function:

This function prompts the user to select the length of the word they want to guess.
If a theme is selected, it shows the available lengths for that theme.
If no theme is selected, it shows the available lengths across all themes.
It validates the user's input and returns the selected word length.
main Function:

The main function handles the overall game flow.
It prompts the user to select a theme and word length, picks a random word from the selected theme and length (or from all themes if no theme is selected), and displays the word to guess.
It allows the user to play multiple rounds by asking if they want to play again.
